body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    background-color: #0F0326; /* Dark background */
    color: white; /* White text */
}

html {
    scroll-behavior: smooth;
}

.navbar {
    background-color: rgba(15, 3, 38, 0.7); /* Accent color */
    color: white;
    padding: 15px;
    text-align: center;
    position: absolute;
    top:0;
    right: 0;
    left:0;
    z-index: 1;
}

.navbar a {
    transition: .3s;
    color: #636a82;
    padding: 14px 20px;
    text-decoration: none;
    display: inline-block;
}

.navbar a:hover {
    color: #FFFFFF;
}

.icon {
    width: 1em;
    height: 1em;
    vertical-align: -.125em;
}

.hero-section {
    height: 75vh; /* You can adjust the height as needed */
    background: #000; /* A fallback color if the video doesn't load */

}

.hero-section video {
    width: 100%;
    height: 100%;
    object-fit: cover; /* This will ensure that the aspect ratio is maintained while covering the entire area */
}

.img-container {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr; /* This creates three columns with the center column twice as wide as the side columns */
    grid-template-rows: auto auto; /* This creates two rows where height is determined by content */
    gap: 30px; /* Adjust the gap as needed */
    max-width: 90%;
    margin: 0 20%;
    padding: 50px;
}

/* Position the first top side image */
.img-container > div:nth-child(1) {
    grid-area: 1 / 1 / 2 / 2;
}

/* Position the second bottom side image */
.img-container > div:nth-child(2) {
    grid-area: 2 / 1 / 3 / 2;
}

/* Span the center image across both rows */
.img-container > div:nth-child(3) {
    grid-area: 1 / 2 / 3 / 3;
}

/* If you have other elements to position, continue with the pattern */
.img-container > div:nth-child(4) {
    grid-area: 1 / 3 / 2 / 4;
}

.img-container > div:nth-child(5) {
    grid-area: 2 / 3 / 3 / 4;
}


.img-container > div > img{
    height: 100%;
    object-fit: cover;
}

.image-container {
    position: relative;
    overflow: hidden; /* ensures the zoom effect stays within bounds */
}

.image-container img {
    width: 100%;
    transition: transform 0.5s ease; /* smooth zoom effect */
}

.image-container:hover img {
    transform: scale(1.1); /* adjust scale value to control zoom level */
}

.overlay {
    position: absolute;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5); /* semi-transparent overlay */
    width: 100%;
    transition: .5s ease;
    opacity:0;
    text-align: center;
    padding: 20px;
    transform: translateY(100%);
}

.image-container:hover .overlay {
    opacity: 1;
    transform: translateY(0);
}

.text {
    color: white;
    font-size: 20px; /* adjust as needed */
}

/* Existing styles for image-container, overlay, etc., go here */

/* Modal styles */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    color: black;
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

.modal-content {
    position: relative; /* Ensure that child elements can be positioned absolutely within */
    background-color: #fefefe;
    margin: 15% auto; /* 15% from the top and centered */
    padding: 20px;
    border: 1px solid #888;
    width: 80%; /* Could be more or less, depending on screen size */
}

.close {
    position: absolute; /* Position the close button absolutely within .modal-content */
    top: 10px; /* Adjust as necessary to position correctly */
    right: 10px; /* Adjust as necessary to position correctly */
    color: black;
    font-size: 30px;
    font-weight: bold;
    opacity: 0.6;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
    opacity: 1;
}
